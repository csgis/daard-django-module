# Generated by Django 2.2.16 on 2021-05-06 14:31

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import geoposition.fields
import jsonfield.fields
import mptt.fields
import uuid


class Migration(migrations.Migration):

    replaces = [('daard_database', '0001_squashed_0052_auto_20210504_0749'), ('daard_database', '0002_auto_20210506_1407'), ('daard_database', '0003_auto_20210506_1410'), ('daard_database', '0004_auto_20210506_1417')]

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Bone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='options', to='daard_database.bone')),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('section', models.CharField(choices=[('cranial_district', 'Cranial district'), ('axial_skeleton', 'Axial skeleton'), ('right_upper_limb', 'Right upper limb'), ('left_upper_limb', 'Left upper limb'), ('right_lower_limb', 'Right lower limb'), ('left_lower_limb', 'Left lower limb')], max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='BoneChange',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Technic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='DiseaseLibrary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('adults', models.BooleanField(blank=True, default=False)),
                ('subadults', models.BooleanField(blank=True, default=False)),
            ],
        ),
        migrations.CreateModel(
            name='DiseaseCase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('age_class', models.CharField(choices=[('Foetus', 'Foetus'), ('0–3', '0 – 3'), ('4–6', '4 – 6'), ('7–12', '7 – 12'), ('13–20', '13 – 20'), ('21–35', '21 – 35'), ('36–50', '36 – 50'), ('50+', '50 +'), ('Unknown', 'Unknown')], max_length=200)),
                ('age', models.CharField(choices=[('unknown', 'Unknown'), ('does_not_apply', 'Does not apply')], max_length=200)),
                ('age_freetext', models.CharField(blank=True, max_length=200)),
                ('archaeological_burial_type', models.CharField(choices=[('single', 'Single'), ('double', 'Double'), ('multiple', 'Multiple'), ('unknown', 'UNKNOWN')], max_length=400)),
                ('archaeological_funery_context', models.CharField(choices=[('primary', 'Primary'), ('secondary', 'Secondary'), ('unknown', 'UNKNOWN')], max_length=400)),
                ('archaeological_individualid', models.CharField(max_length=400)),
                ('archaeological_site', models.CharField(max_length=400)),
                ('archaeological_tombid', models.CharField(max_length=400)),
                ('chronology', models.CharField(max_length=400)),
                ('chronology_freetext', models.CharField(blank=True, max_length=400)),
                ('reference_images', models.CharField(max_length=600)),
                ('dating_method', models.CharField(choices=[('human_bone', 'Human bone'), ('animal_bone', 'Animal bone'), ('horn', 'Horn'), ('ivory', 'Ivory'), ('tooth', 'Tooth'), ('hair', 'Hair'), ('skin', 'Skin'), ('soft_tissues', 'Soft tissues'), ('wood', 'Wood'), ('textile', 'Textile'), ('botanical_remains', 'Botanical remains'), ('stratigraphic', 'Stratigraphic'), ('funerary-structures', 'Funerary structures'), ('grave_goods', 'Grave goods'), ('archives', 'Archives'), ('texts', 'Texts'), ('epigraphic_sources', 'Epigraphic sources'), ('numismatic', 'Numismatic')], max_length=400)),
                ('disease', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='anomalies_case', to='daard_database.diseaselibrary')),
                ('dna_analyses', models.CharField(choices=[('successful', 'Successful'), ('unsuccessful', 'Unsuccessful'), ('absent', 'Absent'), ('unknown', 'UNKNOWN')], max_length=400)),
                ('dna_analyses_link', models.CharField(max_length=400)),
                ('publication', models.CharField(choices=[('published', 'Published'), ('unpublished', 'Unpublished')], max_length=400)),
                ('sex', models.CharField(choices=[('f', 'F'), ('f?', 'F?'), ('unknown', 'UNKNOWN'), ('m', 'M'), ('m?', 'M?')], max_length=200)),
                ('storage_condition', models.CharField(choices=[('exhibition', 'Exhibition'), ('accessible_for_study', 'Accessible for study'), ('not_accessible_for_study', 'Not accessible for study'), ('does_not_apply', 'Does not apply'), ('unknown', 'UNKNOWN')], max_length=400)),
                ('storage_place', models.CharField(choices=[('institution_1', 'Institution 1'), ('institution_2', 'Institution 2'), ('institution_3', 'Institution 3'), ('unknown', 'UNKNOWN')], max_length=400)),
                ('storage_place_freetext', models.CharField(max_length=400)),
                ('position', geoposition.fields.GeopositionField(default=(0, 0), max_length=42)),
                ('geoserver_id', models.UUIDField(blank=True, default=uuid.uuid4)),
                ('is_approved', models.BooleanField(default=False)),
                ('adults', models.BooleanField(default=False)),
                ('subadults', models.BooleanField(default=False)),
                ('inventory', jsonfield.fields.JSONField(default=dict)),
                ('bone_relations', jsonfield.fields.JSONField(default=dict)),
                ('origin', models.CharField(max_length=400)),
                ('published', models.BooleanField(default=False)),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='daard_case_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BoneRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('anomalies_case', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='anomalies_case', to='daard_database.diseasecase')),
                ('bone_case', mptt.fields.TreeManyToManyField(related_name='bone_proxy_case', to='daard_database.Bone')),
                ('bone_change_case', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='bone_change_proxy_case', to='daard_database.bonechange')),
                ('technic_case', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='technic_proxy_case', to='daard_database.technic')),
            ],
        ),
        migrations.CreateModel(
            name='BoneChangeBoneProxy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('technic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='technic_proxy', to='daard_database.technic')),
                ('bone', mptt.fields.TreeManyToManyField(related_name='bone_proxy', to='daard_database.Bone')),
                ('bone_change', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='bone_change_proxy', to='daard_database.bonechange')),
                ('anomalies', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='anomalies', to='daard_database.DiseaseLibrary')),
            ],
        ),
    ]
